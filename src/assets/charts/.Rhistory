epl <- epl %>%
rename(
"titulo" = "TÃ.tulo",
"enlace" = "Enlace.s."
)
View(epublibre)
epl <- select(epublibre, TÃ.tulo, Autor, Publicado)
epl$Publicado <- str_remove(epl$Publicado, "P:")
epl$Publicado <- str_remove(epl$Publicado, "A:")
epl <- mutate(Publicado = as.Date(DATE, format = "%d/%m/%y"))
epl <- mutate(Publicado = as.Date(Publicado, format = "%d/%m/%y"))
epl <- mutate(epl$Publicado = as.Date(Publicado, format = "%d/%m/%y"))
bd_subte<-read_csv("C:\Users\Alan\Documents\Alan\Proyecto R\Data sets\molinetes-2020\historico2.csv")
library(tidyverse)
library(sf)
bd_subte<-read_csv("C:\Users\Alan\Documents\Alan\Proyecto R\Data sets\molinetes-2020\historico2.csv")
bd_subte<-read_csv("\Users\Alan\Documents\Alan\Proyecto R\Data sets\molinetes-2020\historico2.csv")
bd_subte<-read_csv("Users\Alan\Documents\Alan\Proyecto R\Data sets\molinetes-2020\historico2.csv")
bd_subte<-read_csv(Users\Alan\Documents\Alan\Proyecto R\Data sets\molinetes-2020\historico2.csv)
db_subte <- read.csv("~/Alan/Proyecto R/Data sets/molinetes-2020/historico2.csv")
View(db_subte)
db_subte <- select(db_subte, FECHA, LINEA, pax_TOTAL)
ggplot(data = db_subte) +
geom_lines(aes(x = pax_TOTAL, y = FECHA, fill=LINEA)) +
labs(title = "titulo",
subtitle = "subt",
y = "eje y",
caption = "descr")
ggplot(data = db_subte) +
geom_line(aes(x = pax_TOTAL, y = FECHA, fill=LINEA)) +
labs(title = "titulo",
subtitle = "subt",
y = "eje y",
caption = "descr")
data %>%
tail(10) %>%
ggplot( aes(x=FECHA, y=pax_TOTAL)) +
geom_line( color="grey") +
geom_point(shape=21, color="black", fill="#69b3a2", size=6) +
theme_ipsum() +
ggtitle("Pasajeros de subte por día")
db_subte %>%
tail(10) %>%
ggplot( aes(x=FECHA, y=pax_TOTAL)) +
geom_line( color="grey") +
geom_point(shape=21, color="black", fill="#69b3a2", size=6) +
theme_ipsum() +
ggtitle("Pasajeros de subte por día")
db_subte %>%
tail(10) %>%
ggplot( aes(x=FECHA, y=pax_TOTAL)) +
geom_line( color="grey") +
geom_point(shape=21, color="black", fill="#69b3a2", size=6) +
ggtitle("Pasajeros de subte por día")
ggplot(data = db_subte) +
geom_line(aes(x = FECHA , y = pax_TOTAL, fill=LINEA)) +
labs(title = "titulo",
subtitle = "subt",
y = "eje y",
caption = "descr")
ggplot(db_subte)+
geom_point(aes(x=FECHA, y=pax_TOTAL, color=LINEA))+
geom_line (aes(x=FECHA, y=pax_TOTAL, color=LINEA))+
theme(axis.title.x=element_blank(),
axis.text.x=element_blank(),
axis.ticks.x=element_blank())+
labs(y = "Pasajeros")
ggplot(db_subte)+
geom_point(aes(x=FECHA, y=pax_TOTAL, color=LINEA))+
geom_line (aes(x=FECHA, y=pax_TOTAL, color=LINEA))+
db2 <- db_subte %>%
group_by(FECHA, LINEA) %>%
summarise(pax_TOTAL = sum(pax_TOTAL))
ggplot(db_subte)+
geom_point(aes(x=FECHA, y=pax_TOTAL, color=LINEA))+
geom_line (aes(x=FECHA, y=pax_TOTAL, color=LINEA))+
db2 <- db_subte %>%
group_by(FECHA, LINEA) %>%
summarise(pax_TOTAL = sum(pax_TOTAL))
db2 <- db_subte %>%
group_by(FECHA, LINEA) %>%
summarise(pax_TOTAL = sum(pax_TOTAL))
View(db2)
db2$FECHA <- as.date(db2$FECHA))
db2$FECHA <- as.date(db2$FECHA)
db2$FECHA <- as.ate(db2$FECHA)
db2$FECHA <- as.Date(db2$FECHA)
db2$FECHA <- as.Date(c("%m/%d/%Y"))
db2$FECHA <- as.Date(c("%m/%d/%Y"))
db2$FECHA <- as.Date(strDates, "%m/%d/%Y")
db2$FECHA <- as.Date(db2$FECHA, "%m/%d/%Y")
ggplot(db_subte)+
+   geom_point(aes(x=FECHA, y=pax_TOTAL, color=LINEA))+
+   geom_line (aes(x=FECHA, y=pax_TOTAL, color=LINEA))
ggplot(db_subte)+
geom_point(aes(x=FECHA, y=pax_TOTAL, color=LINEA))+
geom_line (aes(x=FECHA, y=pax_TOTAL, color=LINEA))
ggplot(db2)+
geom_point(aes(x=FECHA, y=pax_TOTAL, color=LINEA))+
geom_line (aes(x=FECHA, y=pax_TOTAL, color=LINEA))
db2 <- filter (db2, !FECHA == NA)
db2 <- db_subte %>%
group_by(FECHA, LINEA) %>%
summarise(pax_TOTAL = sum(pax_TOTAL))
ggplot(db2)+
geom_point(aes(x=FECHA, y=pax_TOTAL, color=LINEA))+
geom_line (aes(x=FECHA, y=pax_TOTAL, color=LINEA))
options(scipen=999)
ggplot(db2)+
geom_point(aes(x=FECHA, y=pax_TOTAL, color=LINEA))+
geom_line (aes(x=FECHA, y=pax_TOTAL, color=LINEA))
db2$FECHA <- as.Date(db2$FECHA, "%d/%m/%Y")
ggplot(db2)+
geom_point(aes(x=FECHA, y=pax_TOTAL, color=LINEA))+
geom_line (aes(x=FECHA, y=pax_TOTAL, color=LINEA))
db2$FECHA <- as.Date(db2$FECHA, "%m/%d/%Y")
ggplot(db2)+
geom_point(aes(x=FECHA, y=pax_TOTAL, color=LINEA))+
geom_line (aes(x=FECHA, y=pax_TOTAL, color=LINEA))
db2 <- db_subte %>%
group_by(FECHA, LINEA) %>%
summarise(pax_TOTAL = sum(pax_TOTAL))
db2 <- filter (db2, !FECHA == NA)
db2$FECHA <- as.Date(db2$FECHA, "%m/%d/%Y")
ggplot(db2)+
geom_point(aes(x=FECHA, y=pax_TOTAL, color=LINEA))+
geom_line (aes(x=FECHA, y=pax_TOTAL, color=LINEA))
db2 <- db_subte %>%
group_by(FECHA, LINEA) %>%
summarise(pax_TOTAL = sum(pax_TOTAL))
db2 <- filter (db2, !FECHA == NA)
db2 <- db_subte %>%
group_by(FECHA, LINEA) %>%
summarise(pax_TOTAL = sum(pax_TOTAL))
db2$FECHA <- as.Date(db2$FECHA, "%m/%d/%Y")
ggplot(db2)+
geom_point(aes(x=FECHA, y=pax_TOTAL, color=LINEA))+
geom_line (aes(x=FECHA, y=pax_TOTAL, color=LINEA))
db2 <- filter (db2, !FECHA == "")
db2 <- filter (db2, !FECHA == )
ggplot(db2)+
geom_point(aes(x=FECHA, y=pax_TOTAL))+
geom_line (aes(x=FECHA, y=pax_TOTAL))
require("httr")
require("jsonlite")
library(tidyverse)
options(warn=-1)
coso <- GET("'https://p2p.binance.com/bapi/c2c/v2/friendly/c2c/adv/search",
add_headers(`Accept`= "*/*",
`Accept-Encoding`="gzip, deflate, br",
`content-type` = "application/json",
`Host`: "p2p.binance.com",
`Origin`: "https://p2p.binance.com"))
coso <- GET("'https://p2p.binance.com/bapi/c2c/v2/friendly/c2c/adv/search",
add_headers(`Accept`= "*/*",
`Accept-Encoding`="gzip, deflate, br",
`content-type` = "application/json",
`Host`: "p2p.binance.com",
`Origin`: "https://p2p.binance.com"))
coso <- GET("'https://p2p.binance.com/bapi/c2c/v2/friendly/c2c/adv/search")
coso <- GET("https://p2p.binance.com/bapi/c2c/v2/friendly/c2c/adv/search")
coso <- GET("https://p2p.binance.com/bapi/c2c/v2/friendly/c2c/adv/search"
add_headers(`Accept`= "*/*",
`Accept-Encoding`="gzip, deflate, br",
`content-type` = "application/json",
`Host`: "p2p.binance.com",
`Origin`: "https://p2p.binance.com"))
coso <- GET("https://p2p.binance.com/bapi/c2c/v2/friendly/c2c/adv/search",
add_headers(`Accept`= "*/*",
`Accept-Encoding`="gzip, deflate, br",
`content-type` = "application/json",
`Host`: "p2p.binance.com",
`Origin`: "https://p2p.binance.com"))
coso <- GET("https://p2p.binance.com/bapi/c2c/v2/friendly/c2c/adv/search",
add_headers(`Accept`= "*/*",
`Accept-Encoding`="gzip, deflate, br",
`content-type` = "application/json",
`Host`= "p2p.binance.com",
`Origin`= "https://p2p.binance.com"))
View(coso)
coso <- GET("https://p2p.binance.com/bapi/c2c/v2/friendly/c2c/adv/search",
add_headers(`Accept`= "*/*",
`Accept-Encoding`="gzip, deflate, br",
`content-type` = "application/json",
`Host`= "p2p.binance.com",
`Origin`= "https://p2p.binance.com")
add_data(`asset`= "USDT",
`fiat`="ARS",
`page` = 1,
`rows`= 50,
`tradeType`= "BUY"))
coso <- GET("https://p2p.binance.com/bapi/c2c/v2/friendly/c2c/adv/search",
add_headers(`Accept`= "*/*",
`Accept-Encoding`="gzip, deflate, br",
`content-type` = "application/json",
`Host`= "p2p.binance.com",
`Origin`= "https://p2p.binance.com"),
add_data(`asset`= "USDT",
`fiat`="ARS",
`page` = 1,
`rows`= 50,
`tradeType`= "BUY"))
coso_text <- content(coso, "text")
coso_text
coso_json <- fromJSON(coso_text, flatten = TRUE)
coso <- as.data.frame(coso_json)
View(coso)
coso <- GET("https://p2p.binance.com/bapi/c2c/v2/friendly/c2c/adv/search",
add_headers(`Accept`= "*/*",
`Accept-Encoding`="gzip, deflate, br",
`Accept-Language` = "en-GB,en-US;q=0.9,en;q=0.8",
`Cache-Control`= "no-cache",
`Connection` = "keep-alive",
`Content-Length`= "123",
`content-type` = "application/json",
`Host`= "p2p.binance.com",
`Origin`= "https://p2p.binance.com",
`Pragma`= "no-cache",
`TE`= "Trailers",
`User-Agent`= "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0",
`Origin`= "https://p2p.binance.com"))
coso_text <- content(coso, "text")
coso_text
coso_json <- fromJSON(coso_text, flatten = TRUE)
coso <- as.data.frame(coso_json)
View(coso)
View(coso_json)
View(coso_json)
View(coso)
coso <- GET("https://p2p.binance.com/bapi/c2c/v2/friendly/c2c/adv/search",
add_headers(`Accept`= "*/*",
`Accept-Encoding`="gzip, deflate, br",
`Accept-Language` = "en-GB,en-US;q=0.9,en;q=0.8",
`Cache-Control`= "no-cache",
`Connection` = "keep-alive",
`Content-Length`= "123",
`content-type` = "application/json",
`Host`= "p2p.binance.com",
`Origin`= "https://p2p.binance.com",
`Pragma`= "no-cache",
`TE`= "Trailers",
`User-Agent`= "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:88.0) Gecko/20100101 Firefox/88.0",
`Origin`= "https://p2p.binance.com"))
coso_text <- content(coso, "text")
coso_text
coso_json <- fromJSON(coso_text, flatten = TRUE)
coso <- as.data.frame(coso_json)
View(coso_json)
View(coso)
update.packages()
library(tidyverse)
library(tidyverse)
library(anytime)
library(ash)
library(askpass)
library(assertthat)
library(attempt)
library(backports)
library(base64enc)
library(BH)
library(bit)
library(bit64)
library(blob)
library(boot)
install.packages(c("backports", "digest", "htmltools", "Rcpp", "rlang"))
install.packages("backports")
install.packages("backports")
library(anytime)
library(askpass)
library(ash)
library(tidyverse)
library(tidyverse)
require("httr")
require("jsonlite")
require("anytime")
require("plotly")
library(plotly)
library(htmlwidgets)
alan <- paste("https://aoe2.net/api/player/ratinghistory?game=aoe2de&leaderboard_id=4&steam_id=76561199207580572&count=1000")
alan <- paste("https://aoe2.net/api/player/ratinghistory?game=aoe2de&leaderboard_id=4&steam_id=76561199207580572&count=1000")
alanhr <- GET(alan)
alanhr_text <- content(alanhr, "text")
alanhr_json <- fromJSON(alanhr_text, flatten = TRUE)
alandf <- as.data.frame(alanhr_json)
alandf <-cbind(alandf, player='alanthekat')
library(tidyverse)
require("httr")
require("jsonlite")
require("anytime")
require("plotly")
library(plotly)
library(htmlwidgets)
alan <- paste("https://aoe2.net/api/player/ratinghistory?game=aoe2de&leaderboard_id=4&steam_id=76561199207580572&count=1000")
alanhr <- GET(alan)
alanhr_text <- content(alanhr, "text")
alanhr_json <- fromJSON(alanhr_text, flatten = TRUE)
alandf <- as.data.frame(alanhr_json)
alandf <-cbind(alandf, player='alanthekat')
View(alandf)
alan <- paste("https://aoe2.net/api/player/ratinghistory?game=aoe2de&leaderboard_id=4&steam_id=76561198153797281&count=1000")
alanhr <- GET(alan)
alanhr
alanhr_text <- content(alanhr, "text")
alanhr_text
alanhr_json <- fromJSON(alanhr_text, flatten = TRUE)
alandf <- as.data.frame(alanhr_json)
alandf <-cbind(alandf, player='alanthekat')
View(alandf)
alan <- paste("https://aoe2.net/api/player/ratinghistory?game=aoe2de&leaderboard_id=4&steam_id=76561199207580572&count=1000")
alanhr <- GET(alan)
alanhr_text <- content(alanhr, "text")
alanhr_json <- fromJSON(alanhr_text, flatten = TRUE)
alandf <- as.data.frame(alanhr_json)
alandf <-cbind(alandf, player='alanthekat')
View(alanhr_json)
View(alandf)
alan <- paste("https://aoe2.net/api/player/ratinghistory?game=aoe2de&leaderboard_id=4&steam_id=76561199207580572&count=1000")
alanhr <- GET(alan)
alanhr_text <- content(alanhr, "text")
alanhr_json <- fromJSON(alanhr_text, flatten = TRUE)
alandf <- as.data.frame(alanhr_json)
alandf <-cbind(alandf, player='alanthekat')
dicopato <- paste("https://aoe2.net/api/player/ratinghistory?game=aoe2de&leaderboard_id=4&steam_id=76561199195740571&count=1000")
dicopatohr <- GET(dicopato)
dicopatohr_text <- content(dicopatohr, "text")
dicopatohr_json <- fromJSON(dicopatohr_text, flatten = TRUE)
dicodf <- as.data.frame(dicopatohr_json)
dicodf <-cbind(dicodf, player='dicopato')
nano <- paste("https://aoe2.net/api/player/ratinghistory?game=aoe2de&leaderboard_id=4&steam_id=76561198191637438&count=1000")
nanohr <- GET(nano)
nanohr
nanohr_text <- content(nanohr, "text")
nanohr_text
nanohr_json <- fromJSON(nanohr_text, flatten = TRUE)
nanodf <- as.data.frame(nanohr_json)
nanodf <-cbind(nanodf, player='Nanox')
View(nanohr_json)
View(dicodf)
alan2 <- paste("https://aoe2.net/api/player/matches?game=aoe2de&steam_id=76561199207580572&count=1000")
alanhr2 <- GET(alan2)
alanhr_text2 <- content(alanhr2, "text")
alanhr_json2 <- fromJSON(alanhr_text2, flatten = TRUE)
alandf2 <- as.data.frame(alanhr_json2)
alandf2 <-cbind(alandf2, player='alanthekat')
View(alandf2)
View(alandf2[[41]][[1]])
View(alandf2[[41]][[5]])
View(alandf2[[41]][[1]])
new_dat <- lapply(1:length(alandf2), function(x) NULL)
for (i in 1:length(alandf2)) {
for (j in i) new_dat[[i]] <- alandf2[[i]][["dataset"]][[j]][["players"]]
}
View(new_dat)
new_dat <- lapply(alandf2, function(x) x[["dataset"]][[1]][["players"]])
new_dat <- lapply(alandf2, function(x) x[["dataset"]][[1]][["41"]])
new_dat <- lapply(alandf2, function(x) x[["alandf2"]][[1]][["41"]])
View(new_dat)
new_dat <- lapply(alandf2, function(x) x[["alandf"]][[41]][["1"]])
new_dat <- lapply(alandf2, function(x) x[["alandf2"]][[41]][["1"]])
View(new_dat)
new_dat <- lapply(alandf2, function(x) x[["dataset"]][[41]][["1"]])
new_dat <- lapply(alandf2, function(x) x[["dataset"]][[41]][[1]])
new_dat <- lapply(alandf2, function(x) x[["dataset"]][[41]][["players"]])
new_dat <- lapply(alandf2, function(x) x[["dataset"]][["alandf2"]][["players"]])
myList <- lapply(seq_along(alandf2), function(i) {
# get matrix of non NA positions
pos <- which(!is.na(alandf2[[i]]), arr.ind=TRUE)
# return data.frame for given list item
data.frame(x=i,
y=paste(rownames(alandf2[[i]])[pos[,1]], colnames(alandf2[[i]])[pos[,2]]),
freq=alandf2[[i]][pos])
})
myList <- lapply(seq_along(alandf2), function(i) {
# get matrix of non NA positions
pos <- which(!is.na(alandf2[[41]]), arr.ind=TRUE)
# return data.frame for given list item
data.frame(x=i,
y=paste(rownames(alandf2[[41]])[pos[,1]], colnames(alandf2[[i]])[pos[,2]]),
freq=alandf2[[i]][pos])
})
myList <- lapply(seq_along(alandf2), function(i) {
pos <- which(!is.na(alandf2[[41]]), arr.ind=TRUE)
data.frame(x=i,
y=paste(rownames(alandf2[[41]])[pos[,1]], colnames(alandf2[[41]])[pos[,2]]),
freq=alandf2[[i]][pos])
})
library(tidyverse)
options(scipen=999)
library(dplyr)
require("httr")
require("jsonlite")
library(plotly)
library(htmlwidgets)
alan <- paste("https://aoe2.net/api/player/matches?game=aoe2de&steam_id=76561198153797281&count=1000")
alanhr <- GET(alan)
alanhr_text <- content(alanhr, "text")
alanhr_json <- fromJSON(alanhr_text, flatten = TRUE)
source('~/GitHub/AgeOfCarpincho/Scripts/partidas jugadas segun tipo.R', echo=TRUE)
source('~/GitHub/AgeOfCarpincho/Scripts/partidas jugadas segun tipo.R', echo=TRUE)
source('~/GitHub/AgeOfCarpincho/Scripts/partidas jugadas segun tipo.R', echo=TRUE)
View(nanoxdf2)
nanox2 <- paste("https://aoe2.net/api/player/matches?game=aoe2de&leaderboard_id=3&start=1000&steam_id=76561198191637438&count=1000")
nanoxhr2 <- GET(nanox2)
nanoxhr_text2 <- content(nanoxhr2, "text")
nanoxhr_json2 <- fromJSON(nanoxhr_text2, flatten = TRUE)
nanoxdf2 <- as.data.frame(nanoxhr_json2)
nanoxdf2 <-cbind(nanoxdf2, player='nanox')
nanoxdf2 <- as.data.frame(nanoxhr_json2)
nanoxdf <- as.data.frame(nanoxhr_json)
nanoxdf <-cbind(nanoxdf, player='nanox')
View(nanoxdf)
View(nanoxdf2)
View(nanoxdf)
monillo <- paste("https://aoe2.net/api/player/matches?game=aoe2de&leaderboard_id=3&steam_id=76561198163778606&count=1000")
monillohr <- GET(monillo)
monillohr_text <- content(monillohr, "text")
monillohr_json <- fromJSON(monillohr_text, flatten = TRUE)
monillodf <- as.data.frame(monillohr_json)
monillodf <-cbind(monillodf, player='monillo')
monillo2 <-paste("https://aoe2.net/api/player/matches?game=aoe2de&leaderboard_id=3&start=1000&steam_id=76561198163778606&count=1000")
monillohr2 <- GET(monillo2)
monillohr_text2 <- content(monillohr2, "text")
monillohr_json2 <- fromJSON(monillohr_text2, flatten = TRUE)
monillodf2 <- as.data.frame(monillohr_json2)
monillodf2 <-cbind(monillodf2, player='monillo')
View(monillohr_json2)
View(monillohr_json)
View(monillohr_json2)
View(monillohr2)
View(monillohr2)
View(monillohr)
View(monillohr2)
View(monillohr)
View(monillohr2)
View(monillodf2)
View(monillohr)
View(monillohr2)
View(monillohr2)
View(monillohr2)
View(monillohr)
nanox2 <- paste("https://aoe2.net/api/player/matches?game=aoe2de&start=1000&steam_id=76561198191637438&count=1000")
nanoxhr2 <- GET(nanox2)
nanoxhr_text2 <- content(nanoxhr2, "text")
nanoxhr_json2 <- fromJSON(nanoxhr_text2, flatten = TRUE)
nanoxdf2 <- as.data.frame(nanoxhr_json2)
nanoxdf2 <-cbind(nanoxdf2, player='nanox')
View(nanoxhr_json2)
View(nanoxhr_json)
View(nanoxhr_json2)
View(monillohr)
View(monillohr2)
monillo2 <-paste("https://aoe2.net/api/player/matches?game=aoe2de&leaderboard_id=3&steam_id=76561198163778606&start=1000&count=1000")
monillohr2 <- GET(monillo2)
monillohr_text2 <- content(monillohr2, "text")
monillohr_json2 <- fromJSON(monillohr_text2, flatten = TRUE)
monillodf2 <- as.data.frame(monillohr_json2)
monillodf2 <-cbind(monillodf2, player='monillo')
View(monillodf)
monillo <- paste("https://aoe2.net/api/player/matches?game=aoe2de&leaderboard_id=4&steam_id=76561198163778606&count=1000")
monillohr <- GET(monillo)
monillohr_text <- content(monillohr, "text")
monillohr_json <- fromJSON(monillohr_text, flatten = TRUE)
monillodf <- as.data.frame(monillohr_json)
monillodf <-cbind(monillodf, player='monillo')
View(monillohr)
View(monillohr_json)
monillo <- paste("https://aoe2.net/api/player/matches?game=aoe2de&leaderboard_id=4&steam_id=76561198163778606&count=1000")
monillohr <- GET(monillo)
monillohr_text <- content(monillohr, "text")
monillohr_json <- fromJSON(monillohr_text, flatten = TRUE)
monillodf <- as.data.frame(monillohr_json)
monillodf <-cbind(monillodf, player='monillo')
todos <- rbind (alandf, alandf2, dicodf, dicodf2, monillodf, nanoxdf, nanoxdf2, monillodf2)
todos2 <- select (todos, player, leaderboard_id)
todos2$leaderboard_id <- as.character(as.character(todos2$leaderboard_id))
todos2[is.na(todos2)] <- 444
todos2 <- mutate (todos2, type = case_when(todos2$leaderboard_id == "0" ~ "Unranked",
todos2$leaderboard_id == "1" ~ "Deathmatch 1v1",
todos2$leaderboard_id == "2" ~ "TG Deathmatch",
todos2$leaderboard_id == "3" ~ "Ranked 1v1",
todos2$leaderboard_id == "4" ~ "Ranked TG",
todos2$leaderboard_id == "444" ~ "Other"))
fig <- plot_ly(todos2, y = ~player, type = 'histogram', name = ~type, color = ~type)
fig <- fig %>% layout(barmode = 'stack', type = 'aggregate')
fig
saveWidget(fig, "partidas_tipo.html", selfcontained = F, libdir = "lib")
alan <- paste("https://aoe2.net/api/player/matches?game=aoe2de&steam_id=76561198153797281&count=1000")
alanhr <- GET(alan)
alanhr_text <- content(alanhr, "text")
alanhr_json <- fromJSON(alanhr_text, flatten = TRUE)
alandf <- as.data.frame(alanhr_json)
alandf <-cbind(alandf, player='alanthekat')
alan2 <- paste("https://aoe2.net/api/player/matches?game=aoe2de&steam_id=76561199207580572&count=1000")
alanhr2 <- GET(alan2)
alanhr_text2 <- content(alanhr2, "text")
alanhr_json2 <- fromJSON(alanhr_text2, flatten = TRUE)
alandf2 <- as.data.frame(alanhr_json2)
alandf2 <-cbind(alandf2, player='alanthekat')
todos <- rbind (alandf, alandf2, dicodf, dicodf2, monillodf, nanoxdf, nanoxdf2, monillodf2)
todos2 <- select (todos, player, leaderboard_id)
todos2$leaderboard_id <- as.character(as.character(todos2$leaderboard_id))
todos2[is.na(todos2)] <- 444
todos2 <- mutate (todos2, type = case_when(todos2$leaderboard_id == "0" ~ "Unranked",
todos2$leaderboard_id == "1" ~ "Deathmatch 1v1",
todos2$leaderboard_id == "2" ~ "TG Deathmatch",
todos2$leaderboard_id == "3" ~ "Ranked 1v1",
todos2$leaderboard_id == "4" ~ "Ranked TG",
todos2$leaderboard_id == "444" ~ "Other"))
fig <- plot_ly(todos2, y = ~player, type = 'histogram', name = ~type, color = ~type)
fig <- fig %>% layout(barmode = 'stack', type = 'aggregate')
fig
saveWidget(fig, "partidas_tipo.html", selfcontained = F, libdir = "lib")
